<?xml version="1.0"?>
<launch>
    <arg name="camera" default="/camera/color"/>
    <arg name="camera_depth" default="/camera/depth"/>
    <arg name="robot_height" default="1.0"/>

    <!-- fistly image_raw -> image_rect | done at visual_odometry.launch | uncomment if perfect odometry -->
    <!--<node ns="$(arg camera)" pkg="image_proc" type="image_proc" name="image_proc"/>-->

    <!-- http://wiki.ros.org/rtabmap_ros#rtabmap_ros.2Frgbd_sync | https://github.com/introlab/rtabmap_ros/issues/423 -->
    <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync" output="screen">
        <remap from="rgb/image"         to="$(arg camera)/image_rect"/>
        <remap from="depth/image"       to="$(arg camera_depth)/image_raw"/>
        <remap from="rgb/camera_info"   to="$(arg camera)/camera_info"/>
        <remap from="rgbd_image"        to="rgbd_image"/>   <!-- output -->

        <!-- Should be true for not synchronized camera topics (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360) -->
        <param name="approx_sync"       value="true"/>
    </node>

    <!-- https://github.com/introlab/rtabmap_ros/issues/359 -->
    <!-- SLAM Mode -> args="delete_db_on_start" and Mem/IncrementalMemory = true -->
    <node pkg="rtabmap_ros" type="rtabmap" name="rtabmap" args="--delete_db_on_start">

        <param name="Mem/IncrementalMemory" value="true"/>  <!-- SLAM Mode -->

        <!-- INPUT -->
        <param name="subscribe_depth"       value="false"/>
        <param name="subscribe_rgbd"        value="true"/>
        <param name="subscribe_rgb"         value="false"/>
        <param name="subscribe_scan_cloud"  value="true"/>
        <param name="subscribe_scan"        value="false"/>
        <param name="approx_sync"           value="true"/>

        <remap from="rgbd_image"    to="rgbd_image"/>
        <remap from="scan_cloud"    to="$(arg camera_depth)/points"/>
        <remap from="imu"           to="/imu/data"/>

        <!-- OUTPUT -->
        <remap from="grid_map" to="/map"/>                          <!-- Input for the global costmap -->
        <remap from="octomap_obstacles" to="/octomap_obstacles"/>   <!-- PointCloud2 output used in obstacle detection -->

        <!-- FRAMES -->
        <param name="frame_id"      value="base_link"/>
        <param name="odom_frame_id" value="odom"/>
        <param name="map_frame_id"  value="map"/>
        <param name="publish_tf"    value="true"/>

        <!-- PARAMETERS -->
        <param name="queue_size"        value="10"/>
        <param name="wait_imu_to_init"  value="true"/>  <!-- add imu for orientation -->

        <!-- Rtabmap Parameters -->
        <param name="Grid/3D"                           value="true"/>  <!-- generate octomap -->
        <param name="Grid/FromDepth"                    value="false"/> <!-- occupancy grid from 3D lidar and NOT from depth image -->
        <param name="Grid/GroundIsObstacle"             value="false"/>
        <param name="Grid/RangeMax"                     value="5.0"/>   <!-- Maximum range from sensor. 0=inf. -->
        <param name="Grid/RayTracing"                   value="true"/>
        <param name="Grid/CellSize"                     value="0.05"/>  <!-- resolution of the occupancy grid -->
        <param name="Grid/MaxObstacleHeight"            value="$(arg robot_height)"/>   <!-- max obstacle height should be little higher than robot's height in order to have correct projection -->
        <param name="RGBD/NeighborLinkRefining"         value="true"/>
        <param name="RGBD/ProximityBySpace"             value="false"/>
        <param name="RGBD/AngularUpdate"                value="0.05"/>
        <param name="RGBD/LinearUpdate"                 value="0.05"/>
        <param name="RGBD/OptimizeFromGraphEnd"         value="false"/>
        <param name="RGBD/ProximityPathMaxNeighbors"    value="10"/>    <!-- https://github.com/introlab/rtabmap_ros/issues/270 -->
        <param name="Reg/Force3DoF"                     value="true"/>
        <param name="Reg/Strategy"                      value="1"/>     <!-- Strategy used for NeighborLinkRefining | 0=VO, 1=ICP, 2=VO+ICP | https://github.com/introlab/rtabmap_ros/issues/270 -->
        <param name="Rtabmap/StartNewMapOnLoopClosure"  value="true"/>  <!-- http://wiki.ros.org/rtabmap_ros/Tutorials/Advanced%20Parameter%20Tuning#Odometry_Auto-Reset -->

        <!-- ICP parameters -->
        <param name="Icp/PointToPlane"              value="false"/>
        <param name="Icp/VoxelSize"                 value="0.05"/>
        <param name="Icp/MaxCorrespondenceDistance" value="0.1"/>
    </node>

<?ignore
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in"  to="/octomap_obstacles"/>   <!-- INPUT -->
        <remap from="scan"      to="/scan_obstacles"/>      <!-- OUTPUT -->

        <param name="min_height"    value="0.0"/>
        <param name="max_height"    value="$(arg robot_height)"/>
        <param name="range_max"     value="6.0"/>
        <param name="use_inf"       value="true"/>
    </node>

    <!-- Generate obstacles pointcloud -->
    <node pkg="nodelet" type="nodelet" name="standalone_manager" args="manager" output="screen" />

    <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
    <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid standalone_manager" output="screen">
        <remap from="~input" to="$(arg camera_depth)/points" />
        <rosparam>
        filter_field_name: z
        filter_limit_min: 0.01
        filter_limit_max: 1.5
        filter_limit_negative: False
        leaf_size: 0.05
        </rosparam>
    </node>

    <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection standalone_manager">
         <remap from="cloud" to="/voxel_grid/output"/>
         <remap from="obstacles" to="/planner_cloud"/>

         <param name="frame_id" type="string" value="base_link"/>
         <param name="map_frame_id" type="string" value="map"/>
         <param name="Grid/MinClusterSize" type="int" value="20"/>
         <param name="Grid/MaxObstacleHeight" type="double" value="1.0"/>
       </node>



    <node pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz">
        <param name="subscribe_depth"       value="false"/>
        <param name="subscribe_rgbd"        value="true"/>
        <param name="subscribe_scan_cloud"  value="true"/>
        <param name="subscribe_scan"        value="false"/>
        <param name="subscribe_odom_info"   value="false"/>

        <remap from="rgbd_image"    to="rgbd_image"/>
        <remap from="scan_cloud"    to="$(arg camera_depth)/points"/>

        <param name="frame_id"      value="base_link"/>
        <param name="odom_frame_id" value="odom"/>
    </node>
?>
</launch>
